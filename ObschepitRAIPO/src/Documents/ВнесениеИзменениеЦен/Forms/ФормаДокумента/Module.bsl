
#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//@skip-check use-non-recommended-method
	Сообщить("Ожидайте пожалуйста, идет пересчёт цен!");
	Для Каждого Элемент из Объект.Продукты Цикл
		УстановкаНовыхЦенНаПродукты(Элемент.Продукт, Элемент.ЦенаНовая);
	КонецЦикла;
	
	Для Каждого Элемент из Объект.Продукты Цикл
		УстановкаНовыхЦенНаТовары(Элемент.Продукт, Элемент.ЦенаНовая);
	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПродукты
&НаКлиенте
Процедура ПродуктыПродуктПриИзменении(Элемент)
	 СтрокаТабличнойЧасти = Элементы.Продукты.ТекущиеДанные;
	 СтрокаТабличнойЧасти.ЦенаСтарая = ОбщиеПроцедурыВызовСервера.ЦенаПродукта(Объект.Дата, СтрокаТабличнойЧасти.Продукт); 
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервереБезКонтекста
Процедура УстановкаНовыхЦенНаТовары(Продукт, ЦенаПродукта)
		
	Выборка = Справочники.Товары.Выбрать();
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.ПолучитьОбъект();
		Для Каждого СтрокаТабличнойЧасти из Объект.Продукты Цикл
			Если СтрокаТабличнойЧасти.Продукт.Наименование = Продукт.Наименование Тогда
				СтрокаТабличнойЧасти.Цена = ЦенаПродукта;
				СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Норма;
			КонецЕсли;
			Объект.ЦенаБлюда = Объект.Продукты.Итог("Сумма")/100;
		КонецЦикла;
	Попытка
		Объект.Записать();
	Исключение	
			НСтр("ru = 'Ошибка записи.'");
	КонецПопытки;

	КонецЦикла;
КонецПроцедуры


&НаСервереБезКонтекста
Процедура УстановкаНовыхЦенНаПродукты(Продукт, ЦенаПродукта)
	Выборка = Справочники.Продукты.Выбрать();
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.ПолучитьОбъект();
		Если Объект.Наименование = Продукт.Наименование Тогда
			Объект.Цена = ЦенаПродукта;
		КонецЕсли;
	Попытка
	Объект.Записать();
	Исключение
			НСтр("ru = 'Ошибка записи.'");
	КонецПопытки;

	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти
